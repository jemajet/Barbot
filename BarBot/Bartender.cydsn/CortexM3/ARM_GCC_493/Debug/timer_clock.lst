ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"timer_clock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.timer_clock_Start,"ax",%progbits
  19              		.align	2
  20              		.global	timer_clock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	timer_clock_Start, %function
  24              	timer_clock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\timer_clock.c"
   1:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/timer_clock.c **** * File Name: timer_clock.c
   3:.\Generated_Source\PSoC5/timer_clock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/timer_clock.c **** *
   5:.\Generated_Source\PSoC5/timer_clock.c **** *  Description:
   6:.\Generated_Source\PSoC5/timer_clock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/timer_clock.c **** *
   8:.\Generated_Source\PSoC5/timer_clock.c **** *  Note:
   9:.\Generated_Source\PSoC5/timer_clock.c **** *
  10:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/timer_clock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/timer_clock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/timer_clock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/timer_clock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/timer_clock.c **** 
  17:.\Generated_Source\PSoC5/timer_clock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/timer_clock.c **** #include "timer_clock.h"
  19:.\Generated_Source\PSoC5/timer_clock.c **** 
  20:.\Generated_Source\PSoC5/timer_clock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/timer_clock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/timer_clock.c **** 
  27:.\Generated_Source\PSoC5/timer_clock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/timer_clock.c **** 
  29:.\Generated_Source\PSoC5/timer_clock.c **** 
  30:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_Start
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 2


  32:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/timer_clock.c **** *
  34:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
  35:.\Generated_Source\PSoC5/timer_clock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/timer_clock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/timer_clock.c **** *
  38:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  40:.\Generated_Source\PSoC5/timer_clock.c **** *
  41:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
  42:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  43:.\Generated_Source\PSoC5/timer_clock.c **** *
  44:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_Start(void) 
  46:.\Generated_Source\PSoC5/timer_clock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/timer_clock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_CLKEN |= timer_clock_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F00203 		orr	r3, r3, #2
  36 0008 1370     		strb	r3, [r2]
  49:.\Generated_Source\PSoC5/timer_clock.c **** 	timer_clock_CLKSTBY |= timer_clock_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1032     		adds	r2, r2, #16
  39 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  40 000e 43F00203 		orr	r3, r3, #2
  41 0012 1370     		strb	r3, [r2]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A2430040 		.word	1073759138
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	timer_clock_Start, .-timer_clock_Start
  50              		.section	.text.timer_clock_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	timer_clock_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	timer_clock_Stop, %function
  56              	timer_clock_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/timer_clock.c **** }
  51:.\Generated_Source\PSoC5/timer_clock.c **** 
  52:.\Generated_Source\PSoC5/timer_clock.c **** 
  53:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_Stop
  55:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/timer_clock.c **** *
  57:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 3


  58:.\Generated_Source\PSoC5/timer_clock.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/timer_clock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/timer_clock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/timer_clock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/timer_clock.c **** *
  64:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  66:.\Generated_Source\PSoC5/timer_clock.c **** *
  67:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
  68:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  69:.\Generated_Source\PSoC5/timer_clock.c **** *
  70:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_Stop(void) 
  72:.\Generated_Source\PSoC5/timer_clock.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/timer_clock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66 0004 03F0FD03 		and	r3, r3, #253
  67 0008 1370     		strb	r3, [r2]
  75:.\Generated_Source\PSoC5/timer_clock.c **** 	timer_clock_CLKSTBY &= (uint8)(~timer_clock_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1032     		adds	r2, r2, #16
  70 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  71 000e 03F0FD03 		and	r3, r3, #253
  72 0012 1370     		strb	r3, [r2]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A2430040 		.word	1073759138
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	timer_clock_Stop, .-timer_clock_Stop
  81              		.section	.text.timer_clock_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	timer_clock_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	timer_clock_StopBlock, %function
  87              	timer_clock_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/timer_clock.c **** }
  77:.\Generated_Source\PSoC5/timer_clock.c **** 
  78:.\Generated_Source\PSoC5/timer_clock.c **** 
  79:.\Generated_Source\PSoC5/timer_clock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/timer_clock.c **** 
  81:.\Generated_Source\PSoC5/timer_clock.c **** 
  82:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_StopBlock
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 4


  84:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/timer_clock.c **** *
  86:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
  87:.\Generated_Source\PSoC5/timer_clock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/timer_clock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/timer_clock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/timer_clock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/timer_clock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/timer_clock.c **** *
  93:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  95:.\Generated_Source\PSoC5/timer_clock.c **** *
  96:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
  97:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  98:.\Generated_Source\PSoC5/timer_clock.c **** *
  99:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/timer_clock.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/timer_clock.c ****     if ((timer_clock_CLKEN & timer_clock_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 164B     		ldr	r3, .L10
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0020F 		tst	r3, #2
  98 0008 27D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/timer_clock.c ****     {
 104:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/timer_clock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/timer_clock.c **** 
 107:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 1549     		ldr	r1, .L10+4
 102 000c 0023     		movs	r3, #0
 103 000e 0B70     		strb	r3, [r1]
 108:.\Generated_Source\PSoC5/timer_clock.c **** 
 109:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/timer_clock.c **** #if defined(timer_clock__CFG3)
 111:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_AMASK = timer_clock_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/timer_clock.c **** #else
 114:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_DMASK = timer_clock_CLKEN_MASK;
 104              		.loc 1 114 0
 105 0010 0220     		movs	r0, #2
 106 0012 144A     		ldr	r2, .L10+8
 107 0014 1070     		strb	r0, [r2]
 115:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_AMASK = 0x00u;
 108              		.loc 1 115 0
 109 0016 0432     		adds	r2, r2, #4
 110 0018 1370     		strb	r3, [r2]
 116:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* timer_clock__CFG3 */
 117:.\Generated_Source\PSoC5/timer_clock.c **** 
 118:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 5


 119:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 0C3A     		subs	r2, r2, #12
 113 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 001e 03F07F03 		and	r3, r3, #127
 115 0022 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/timer_clock.c **** 
 121:.\Generated_Source\PSoC5/timer_clock.c ****         oldDivider = CY_GET_REG16(timer_clock_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 104B     		ldr	r3, .L10+12
 118 0026 1A88     		ldrh	r2, [r3]
 119 0028 92B2     		uxth	r2, r2
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/timer_clock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a 823B     		subs	r3, r3, #130
 123 002c 1A80     		strh	r2, [r3]	@ movhi
 123:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 002e 0723     		movs	r3, #7
 126 0030 0B70     		strb	r3, [r1]
 127              	.L9:
 124:.\Generated_Source\PSoC5/timer_clock.c **** 
 125:.\Generated_Source\PSoC5/timer_clock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/timer_clock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 128              		.loc 1 126 0 discriminator 1
 129 0032 0B4B     		ldr	r3, .L10+4
 130 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0036 13F0010F 		tst	r3, #1
 132 003a FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/timer_clock.c **** 
 129:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
 133              		.loc 1 130 0
 134 003c 0749     		ldr	r1, .L10
 135 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 136 0040 03F0FD03 		and	r3, r3, #253
 137 0044 0B70     		strb	r3, [r1]
 131:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKSTBY &= (uint8)(~timer_clock_CLKSTBY_MASK);
 138              		.loc 1 131 0
 139 0046 1031     		adds	r1, r1, #16
 140 0048 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 141 004a 03F0FD03 		and	r3, r3, #253
 142 004e 0B70     		strb	r3, [r1]
 132:.\Generated_Source\PSoC5/timer_clock.c **** 
 133:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_LD = 0x00u;
 143              		.loc 1 135 0
 144 0050 0021     		movs	r1, #0
 145 0052 034B     		ldr	r3, .L10+4
 146 0054 1970     		strb	r1, [r3]
 136:.\Generated_Source\PSoC5/timer_clock.c ****         CY_SET_REG16(timer_clock_DIV_PTR, oldDivider);
 147              		.loc 1 136 0
 148 0056 8333     		adds	r3, r3, #131
 149 0058 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 6


 150              	.LVL1:
 151              	.L7:
 152 005a 7047     		bx	lr
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 005c A2430040 		.word	1073759138
 157 0060 01400040 		.word	1073758209
 158 0064 10400040 		.word	1073758224
 159 0068 84400040 		.word	1073758340
 160              	.LBE2:
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	timer_clock_StopBlock, .-timer_clock_StopBlock
 164              		.section	.text.timer_clock_StandbyPower,"ax",%progbits
 165              		.align	2
 166              		.global	timer_clock_StandbyPower
 167              		.thumb
 168              		.thumb_func
 169              		.type	timer_clock_StandbyPower, %function
 170              	timer_clock_StandbyPower:
 171              	.LFB3:
 137:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/timer_clock.c ****     }
 139:.\Generated_Source\PSoC5/timer_clock.c **** }
 140:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/timer_clock.c **** 
 142:.\Generated_Source\PSoC5/timer_clock.c **** 
 143:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_StandbyPower
 145:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/timer_clock.c **** *
 147:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 148:.\Generated_Source\PSoC5/timer_clock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/timer_clock.c **** *
 150:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/timer_clock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/timer_clock.c **** *
 153:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 154:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 155:.\Generated_Source\PSoC5/timer_clock.c **** *
 156:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/timer_clock.c **** {
 172              		.loc 1 158 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LVL2:
 159:.\Generated_Source\PSoC5/timer_clock.c ****     if(state == 0u)
 178              		.loc 1 159 0
 179 0000 28B9     		cbnz	r0, .L13
 160:.\Generated_Source\PSoC5/timer_clock.c ****     {
 161:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKSTBY &= (uint8)(~timer_clock_CLKSTBY_MASK);
 180              		.loc 1 161 0
 181 0002 064A     		ldr	r2, .L15
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 7


 182 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 0006 03F0FD03 		and	r3, r3, #253
 184 000a 1370     		strb	r3, [r2]
 185 000c 7047     		bx	lr
 186              	.L13:
 162:.\Generated_Source\PSoC5/timer_clock.c ****     }
 163:.\Generated_Source\PSoC5/timer_clock.c ****     else
 164:.\Generated_Source\PSoC5/timer_clock.c ****     {
 165:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKSTBY |= timer_clock_CLKSTBY_MASK;
 187              		.loc 1 165 0
 188 000e 034A     		ldr	r2, .L15
 189 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 190 0012 43F00203 		orr	r3, r3, #2
 191 0016 1370     		strb	r3, [r2]
 192 0018 7047     		bx	lr
 193              	.L16:
 194 001a 00BF     		.align	2
 195              	.L15:
 196 001c B2430040 		.word	1073759154
 197              		.cfi_endproc
 198              	.LFE3:
 199              		.size	timer_clock_StandbyPower, .-timer_clock_StandbyPower
 200              		.section	.text.timer_clock_GetDividerRegister,"ax",%progbits
 201              		.align	2
 202              		.global	timer_clock_GetDividerRegister
 203              		.thumb
 204              		.thumb_func
 205              		.type	timer_clock_GetDividerRegister, %function
 206              	timer_clock_GetDividerRegister:
 207              	.LFB5:
 166:.\Generated_Source\PSoC5/timer_clock.c ****     }
 167:.\Generated_Source\PSoC5/timer_clock.c **** }
 168:.\Generated_Source\PSoC5/timer_clock.c **** 
 169:.\Generated_Source\PSoC5/timer_clock.c **** 
 170:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_SetDividerRegister
 172:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/timer_clock.c **** *
 174:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 175:.\Generated_Source\PSoC5/timer_clock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/timer_clock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/timer_clock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/timer_clock.c **** *
 180:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/timer_clock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/timer_clock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/timer_clock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/timer_clock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/timer_clock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/timer_clock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/timer_clock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/timer_clock.c **** *
 189:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 190:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 191:.\Generated_Source\PSoC5/timer_clock.c **** *
 192:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 8


 193:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/timer_clock.c ****                                 
 195:.\Generated_Source\PSoC5/timer_clock.c **** {
 196:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/timer_clock.c **** 
 198:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 currSrc = timer_clock_GetSourceRegister();
 199:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 oldDivider = timer_clock_GetDividerRegister();
 200:.\Generated_Source\PSoC5/timer_clock.c **** 
 201:.\Generated_Source\PSoC5/timer_clock.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/timer_clock.c ****     {
 203:.\Generated_Source\PSoC5/timer_clock.c ****         enabled = timer_clock_CLKEN & timer_clock_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/timer_clock.c **** 
 205:.\Generated_Source\PSoC5/timer_clock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/timer_clock.c ****         {
 207:.\Generated_Source\PSoC5/timer_clock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/timer_clock.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/timer_clock.c ****             {
 210:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/timer_clock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/timer_clock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/timer_clock.c ****             }
 216:.\Generated_Source\PSoC5/timer_clock.c ****             else
 217:.\Generated_Source\PSoC5/timer_clock.c ****             {
 218:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/timer_clock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/timer_clock.c ****             }
 223:.\Generated_Source\PSoC5/timer_clock.c ****         }
 224:.\Generated_Source\PSoC5/timer_clock.c ****         else
 225:.\Generated_Source\PSoC5/timer_clock.c ****         {
 226:.\Generated_Source\PSoC5/timer_clock.c **** 			
 227:.\Generated_Source\PSoC5/timer_clock.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/timer_clock.c ****             {
 229:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/timer_clock.c **** 
 231:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/timer_clock.c **** #if defined(timer_clock__CFG3)
 233:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_AMASK = timer_clock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/timer_clock.c **** #else
 236:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_DMASK = timer_clock_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* timer_clock__CFG3 */
 239:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/timer_clock.c **** 
 242:.\Generated_Source\PSoC5/timer_clock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/timer_clock.c ****                 if (((timer_clock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/timer_clock.c ****                 {
 245:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/timer_clock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/timer_clock.c **** 
 249:.\Generated_Source\PSoC5/timer_clock.c ****                     /* Wait for clock to be disabled */
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 9


 250:.\Generated_Source\PSoC5/timer_clock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/timer_clock.c **** 
 253:.\Generated_Source\PSoC5/timer_clock.c ****                     timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/timer_clock.c **** 
 255:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/timer_clock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/timer_clock.c ****                 }
 260:.\Generated_Source\PSoC5/timer_clock.c ****             }
 261:.\Generated_Source\PSoC5/timer_clock.c **** 
 262:.\Generated_Source\PSoC5/timer_clock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/timer_clock.c ****             if ((timer_clock_CLKEN & timer_clock_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/timer_clock.c ****             {
 265:.\Generated_Source\PSoC5/timer_clock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/timer_clock.c **** 
 268:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/timer_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/timer_clock.c ****             }
 271:.\Generated_Source\PSoC5/timer_clock.c ****             else
 272:.\Generated_Source\PSoC5/timer_clock.c ****             {
 273:.\Generated_Source\PSoC5/timer_clock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/timer_clock.c **** 				timer_clock_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/timer_clock.c ****             }
 277:.\Generated_Source\PSoC5/timer_clock.c ****         }
 278:.\Generated_Source\PSoC5/timer_clock.c ****     }
 279:.\Generated_Source\PSoC5/timer_clock.c **** }
 280:.\Generated_Source\PSoC5/timer_clock.c **** 
 281:.\Generated_Source\PSoC5/timer_clock.c **** 
 282:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_GetDividerRegister
 284:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/timer_clock.c **** *
 286:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 287:.\Generated_Source\PSoC5/timer_clock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/timer_clock.c **** *
 289:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 291:.\Generated_Source\PSoC5/timer_clock.c **** *
 292:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 293:.\Generated_Source\PSoC5/timer_clock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/timer_clock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/timer_clock.c **** *
 296:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/timer_clock.c **** uint16 timer_clock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/timer_clock.c **** {
 208              		.loc 1 298 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/timer_clock.c ****     return CY_GET_REG16(timer_clock_DIV_PTR);
 213              		.loc 1 299 0
 214 0000 014B     		ldr	r3, .L18
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 10


 215 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/timer_clock.c **** }
 216              		.loc 1 300 0
 217 0004 80B2     		uxth	r0, r0
 218 0006 7047     		bx	lr
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 0008 84400040 		.word	1073758340
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	timer_clock_GetDividerRegister, .-timer_clock_GetDividerRegister
 226              		.section	.text.timer_clock_SetModeRegister,"ax",%progbits
 227              		.align	2
 228              		.global	timer_clock_SetModeRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	timer_clock_SetModeRegister, %function
 232              	timer_clock_SetModeRegister:
 233              	.LFB6:
 301:.\Generated_Source\PSoC5/timer_clock.c **** 
 302:.\Generated_Source\PSoC5/timer_clock.c **** 
 303:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_SetModeRegister
 305:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/timer_clock.c **** *
 307:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 308:.\Generated_Source\PSoC5/timer_clock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/timer_clock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/timer_clock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/timer_clock.c **** *
 313:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/timer_clock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/timer_clock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/timer_clock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/timer_clock.c **** *                 value.
 319:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/timer_clock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/timer_clock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/timer_clock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/timer_clock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/timer_clock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/timer_clock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/timer_clock.c **** *
 328:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 329:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 330:.\Generated_Source\PSoC5/timer_clock.c **** *
 331:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/timer_clock.c **** {
 234              		.loc 1 333 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 11


 238              		@ link register save eliminated.
 239              	.LVL3:
 334:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_MOD_SRC |= modeBitMask & (uint8)timer_clock_MODE_MASK;
 240              		.loc 1 334 0
 241 0000 034B     		ldr	r3, .L21
 242 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 243 0004 00F0F800 		and	r0, r0, #248
 244              	.LVL4:
 245 0008 1043     		orrs	r0, r0, r2
 246 000a 1870     		strb	r0, [r3]
 247 000c 7047     		bx	lr
 248              	.L22:
 249 000e 00BF     		.align	2
 250              	.L21:
 251 0010 86400040 		.word	1073758342
 252              		.cfi_endproc
 253              	.LFE6:
 254              		.size	timer_clock_SetModeRegister, .-timer_clock_SetModeRegister
 255              		.section	.text.timer_clock_ClearModeRegister,"ax",%progbits
 256              		.align	2
 257              		.global	timer_clock_ClearModeRegister
 258              		.thumb
 259              		.thumb_func
 260              		.type	timer_clock_ClearModeRegister, %function
 261              	timer_clock_ClearModeRegister:
 262              	.LFB7:
 335:.\Generated_Source\PSoC5/timer_clock.c **** }
 336:.\Generated_Source\PSoC5/timer_clock.c **** 
 337:.\Generated_Source\PSoC5/timer_clock.c **** 
 338:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_ClearModeRegister
 340:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/timer_clock.c **** *
 342:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 343:.\Generated_Source\PSoC5/timer_clock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/timer_clock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/timer_clock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/timer_clock.c **** *
 348:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/timer_clock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/timer_clock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/timer_clock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/timer_clock.c **** *                 value.
 354:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/timer_clock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/timer_clock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/timer_clock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/timer_clock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/timer_clock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/timer_clock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/timer_clock.c **** *
 363:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 364:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 365:.\Generated_Source\PSoC5/timer_clock.c **** *
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 12


 366:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/timer_clock.c **** {
 263              		.loc 1 368 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL5:
 369:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(timer_clock_MODE_MASK));
 269              		.loc 1 369 0
 270 0000 044B     		ldr	r3, .L24
 271 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 272 0004 C043     		mvns	r0, r0
 273              	.LVL6:
 274 0006 C0B2     		uxtb	r0, r0
 275 0008 40F00700 		orr	r0, r0, #7
 276 000c 1040     		ands	r0, r0, r2
 277 000e 1870     		strb	r0, [r3]
 278 0010 7047     		bx	lr
 279              	.L25:
 280 0012 00BF     		.align	2
 281              	.L24:
 282 0014 86400040 		.word	1073758342
 283              		.cfi_endproc
 284              	.LFE7:
 285              		.size	timer_clock_ClearModeRegister, .-timer_clock_ClearModeRegister
 286              		.section	.text.timer_clock_GetModeRegister,"ax",%progbits
 287              		.align	2
 288              		.global	timer_clock_GetModeRegister
 289              		.thumb
 290              		.thumb_func
 291              		.type	timer_clock_GetModeRegister, %function
 292              	timer_clock_GetModeRegister:
 293              	.LFB8:
 370:.\Generated_Source\PSoC5/timer_clock.c **** }
 371:.\Generated_Source\PSoC5/timer_clock.c **** 
 372:.\Generated_Source\PSoC5/timer_clock.c **** 
 373:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_GetModeRegister
 375:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/timer_clock.c **** *
 377:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 378:.\Generated_Source\PSoC5/timer_clock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/timer_clock.c **** *
 380:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 382:.\Generated_Source\PSoC5/timer_clock.c **** *
 383:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 384:.\Generated_Source\PSoC5/timer_clock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/timer_clock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/timer_clock.c **** *
 387:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/timer_clock.c **** uint8 timer_clock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/timer_clock.c **** {
 294              		.loc 1 389 0
 295              		.cfi_startproc
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 13


 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/timer_clock.c ****     return timer_clock_MOD_SRC & (uint8)(timer_clock_MODE_MASK);
 299              		.loc 1 390 0
 300 0000 024B     		ldr	r3, .L27
 301 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/timer_clock.c **** }
 302              		.loc 1 391 0
 303 0004 00F0F800 		and	r0, r0, #248
 304 0008 7047     		bx	lr
 305              	.L28:
 306 000a 00BF     		.align	2
 307              	.L27:
 308 000c 86400040 		.word	1073758342
 309              		.cfi_endproc
 310              	.LFE8:
 311              		.size	timer_clock_GetModeRegister, .-timer_clock_GetModeRegister
 312              		.section	.text.timer_clock_GetSourceRegister,"ax",%progbits
 313              		.align	2
 314              		.global	timer_clock_GetSourceRegister
 315              		.thumb
 316              		.thumb_func
 317              		.type	timer_clock_GetSourceRegister, %function
 318              	timer_clock_GetSourceRegister:
 319              	.LFB10:
 392:.\Generated_Source\PSoC5/timer_clock.c **** 
 393:.\Generated_Source\PSoC5/timer_clock.c **** 
 394:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_SetSourceRegister
 396:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/timer_clock.c **** *
 398:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 399:.\Generated_Source\PSoC5/timer_clock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/timer_clock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/timer_clock.c **** *
 402:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/timer_clock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/timer_clock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/timer_clock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/timer_clock.c **** *
 415:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 416:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 417:.\Generated_Source\PSoC5/timer_clock.c **** *
 418:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/timer_clock.c **** {
 421:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 currDiv = timer_clock_GetDividerRegister();
 422:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 oldSrc = timer_clock_GetSourceRegister();
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 14


 423:.\Generated_Source\PSoC5/timer_clock.c **** 
 424:.\Generated_Source\PSoC5/timer_clock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/timer_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/timer_clock.c ****     {
 427:.\Generated_Source\PSoC5/timer_clock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/timer_clock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 431:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/timer_clock.c ****     }
 433:.\Generated_Source\PSoC5/timer_clock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/timer_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/timer_clock.c ****     {
 436:.\Generated_Source\PSoC5/timer_clock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/timer_clock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 439:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/timer_clock.c ****     }
 442:.\Generated_Source\PSoC5/timer_clock.c ****     else
 443:.\Generated_Source\PSoC5/timer_clock.c ****     {
 444:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 445:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/timer_clock.c ****     }
 447:.\Generated_Source\PSoC5/timer_clock.c **** }
 448:.\Generated_Source\PSoC5/timer_clock.c **** 
 449:.\Generated_Source\PSoC5/timer_clock.c **** 
 450:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_GetSourceRegister
 452:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/timer_clock.c **** *
 454:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 455:.\Generated_Source\PSoC5/timer_clock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/timer_clock.c **** *
 457:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 459:.\Generated_Source\PSoC5/timer_clock.c **** *
 460:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 461:.\Generated_Source\PSoC5/timer_clock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/timer_clock.c **** *
 463:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/timer_clock.c **** uint8 timer_clock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/timer_clock.c **** {
 320              		.loc 1 465 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/timer_clock.c ****     return timer_clock_MOD_SRC & timer_clock_SRC_SEL_MSK;
 325              		.loc 1 466 0
 326 0000 024B     		ldr	r3, .L30
 327 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/timer_clock.c **** }
 328              		.loc 1 467 0
 329 0004 00F00700 		and	r0, r0, #7
 330 0008 7047     		bx	lr
 331              	.L31:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 15


 332 000a 00BF     		.align	2
 333              	.L30:
 334 000c 86400040 		.word	1073758342
 335              		.cfi_endproc
 336              	.LFE10:
 337              		.size	timer_clock_GetSourceRegister, .-timer_clock_GetSourceRegister
 338              		.section	.text.timer_clock_SetDividerRegister,"ax",%progbits
 339              		.align	2
 340              		.global	timer_clock_SetDividerRegister
 341              		.thumb
 342              		.thumb_func
 343              		.type	timer_clock_SetDividerRegister, %function
 344              	timer_clock_SetDividerRegister:
 345              	.LFB4:
 195:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 enabled;
 346              		.loc 1 195 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL7:
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 357 0002 0446     		mov	r4, r0
 358 0004 0D46     		mov	r5, r1
 198:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 oldDivider = timer_clock_GetDividerRegister();
 359              		.loc 1 198 0
 360 0006 FFF7FEFF 		bl	timer_clock_GetSourceRegister
 361              	.LVL8:
 362 000a 0646     		mov	r6, r0
 363              	.LVL9:
 199:.\Generated_Source\PSoC5/timer_clock.c **** 
 364              		.loc 1 199 0
 365 000c FFF7FEFF 		bl	timer_clock_GetDividerRegister
 366              	.LVL10:
 201:.\Generated_Source\PSoC5/timer_clock.c ****     {
 367              		.loc 1 201 0
 368 0010 8442     		cmp	r4, r0
 369 0012 57D0     		beq	.L32
 203:.\Generated_Source\PSoC5/timer_clock.c **** 
 370              		.loc 1 203 0
 371 0014 2C4B     		ldr	r3, .L45
 372 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373 0018 03F00203 		and	r3, r3, #2
 374 001c DAB2     		uxtb	r2, r3
 375              	.LVL11:
 205:.\Generated_Source\PSoC5/timer_clock.c ****         {
 376              		.loc 1 205 0
 377 001e 96B9     		cbnz	r6, .L34
 205:.\Generated_Source\PSoC5/timer_clock.c ****         {
 378              		.loc 1 205 0 is_stmt 0 discriminator 1
 379 0020 00B1     		cbz	r0, .L35
 205:.\Generated_Source\PSoC5/timer_clock.c ****         {
 380              		.loc 1 205 0 discriminator 2
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 16


 381 0022 84B9     		cbnz	r4, .L34
 382              	.L35:
 208:.\Generated_Source\PSoC5/timer_clock.c ****             {
 383              		.loc 1 208 0 is_stmt 1
 384 0024 38B9     		cbnz	r0, .L36
 213:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 385              		.loc 1 213 0
 386 0026 294B     		ldr	r3, .L45+4
 387 0028 1C80     		strh	r4, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/timer_clock.c ****             }
 388              		.loc 1 214 0
 389 002a 294A     		ldr	r2, .L45+8
 390              	.LVL12:
 391 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 392 002e 03F0BF03 		and	r3, r3, #191
 393 0032 1370     		strb	r3, [r2]
 394 0034 70BD     		pop	{r4, r5, r6, pc}
 395              	.LVL13:
 396              	.L36:
 220:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 397              		.loc 1 220 0
 398 0036 264A     		ldr	r2, .L45+8
 399              	.LVL14:
 400 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401              	.LVL15:
 402 003a 43F04003 		orr	r3, r3, #64
 403 003e 1370     		strb	r3, [r2]
 221:.\Generated_Source\PSoC5/timer_clock.c ****             }
 404              		.loc 1 221 0
 405 0040 224B     		ldr	r3, .L45+4
 406 0042 1C80     		strh	r4, [r3]	@ movhi
 407 0044 70BD     		pop	{r4, r5, r6, pc}
 408              	.LVL16:
 409              	.L34:
 227:.\Generated_Source\PSoC5/timer_clock.c ****             {
 410              		.loc 1 227 0
 411 0046 22B3     		cbz	r2, .L37
 229:.\Generated_Source\PSoC5/timer_clock.c **** 
 412              		.loc 1 229 0
 413 0048 0023     		movs	r3, #0
 414 004a 2249     		ldr	r1, .L45+12
 415 004c 0B70     		strb	r3, [r1]
 236:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_AMASK = 0x00u;
 416              		.loc 1 236 0
 417 004e 0226     		movs	r6, #2
 418              	.LVL17:
 419 0050 0F31     		adds	r1, r1, #15
 420 0052 0E70     		strb	r6, [r1]
 237:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* timer_clock__CFG3 */
 421              		.loc 1 237 0
 422 0054 0431     		adds	r1, r1, #4
 423 0056 0B70     		strb	r3, [r1]
 240:.\Generated_Source\PSoC5/timer_clock.c **** 
 424              		.loc 1 240 0
 425 0058 0C39     		subs	r1, r1, #12
 426 005a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 427 005c 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 17


 428 0060 0B70     		strb	r3, [r1]
 243:.\Generated_Source\PSoC5/timer_clock.c ****                 {
 429              		.loc 1 243 0
 430 0062 1B4B     		ldr	r3, .L45+8
 431 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0066 13F0080F 		tst	r3, #8
 433 006a 00D0     		beq	.L38
 243:.\Generated_Source\PSoC5/timer_clock.c ****                 {
 434              		.loc 1 243 0 is_stmt 0 discriminator 1
 435 006c 8CB9     		cbnz	r4, .L37
 436              	.L38:
 246:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 437              		.loc 1 246 0 is_stmt 1
 438 006e 1A4B     		ldr	r3, .L45+16
 439 0070 1880     		strh	r0, [r3]	@ movhi
 247:.\Generated_Source\PSoC5/timer_clock.c **** 
 440              		.loc 1 247 0
 441 0072 0721     		movs	r1, #7
 442 0074 013B     		subs	r3, r3, #1
 443 0076 1970     		strb	r1, [r3]
 444              	.L39:
 250:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 445              		.loc 1 250 0 discriminator 1
 446 0078 164B     		ldr	r3, .L45+12
 447 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 007c 13F0010F 		tst	r3, #1
 449 0080 FAD1     		bne	.L39
 253:.\Generated_Source\PSoC5/timer_clock.c **** 
 450              		.loc 1 253 0
 451 0082 1149     		ldr	r1, .L45
 452 0084 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 0086 03F0FD03 		and	r3, r3, #253
 454 008a 0B70     		strb	r3, [r1]
 257:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 455              		.loc 1 257 0
 456 008c 0021     		movs	r1, #0
 457 008e 114B     		ldr	r3, .L45+12
 458 0090 1970     		strb	r1, [r3]
 459              	.L37:
 263:.\Generated_Source\PSoC5/timer_clock.c ****             {
 460              		.loc 1 263 0
 461 0092 0D4B     		ldr	r3, .L45
 462 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 0096 13F0020F 		tst	r3, #2
 464 009a 0DD0     		beq	.L40
 266:.\Generated_Source\PSoC5/timer_clock.c **** 
 465              		.loc 1 266 0
 466 009c 0E4B     		ldr	r3, .L45+16
 467 009e 1C80     		strh	r4, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/timer_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 468              		.loc 1 268 0
 469 00a0 0DB1     		cbz	r5, .L43
 470 00a2 0322     		movs	r2, #3
 471              	.LVL18:
 472 00a4 00E0     		b	.L41
 473              	.LVL19:
 474              	.L43:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 18


 475 00a6 0122     		movs	r2, #1
 476              	.LVL20:
 477              	.L41:
 268:.\Generated_Source\PSoC5/timer_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 478              		.loc 1 268 0 is_stmt 0 discriminator 4
 479 00a8 0A4B     		ldr	r3, .L45+12
 480 00aa 1A70     		strb	r2, [r3]
 481              	.L42:
 269:.\Generated_Source\PSoC5/timer_clock.c ****             }
 482              		.loc 1 269 0 is_stmt 1 discriminator 1
 483 00ac 094B     		ldr	r3, .L45+12
 484 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 00b0 13F0010F 		tst	r3, #1
 486 00b4 FAD1     		bne	.L42
 487 00b6 70BD     		pop	{r4, r5, r6, pc}
 488              	.LVL21:
 489              	.L40:
 274:.\Generated_Source\PSoC5/timer_clock.c **** 				timer_clock_CLKEN |= enabled;
 490              		.loc 1 274 0
 491 00b8 044B     		ldr	r3, .L45+4
 492 00ba 1C80     		strh	r4, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/timer_clock.c ****             }
 493              		.loc 1 275 0
 494 00bc 0249     		ldr	r1, .L45
 495 00be 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 496 00c0 1343     		orrs	r3, r3, r2
 497 00c2 0B70     		strb	r3, [r1]
 498              	.LVL22:
 499              	.L32:
 500 00c4 70BD     		pop	{r4, r5, r6, pc}
 501              	.L46:
 502 00c6 00BF     		.align	2
 503              	.L45:
 504 00c8 A2430040 		.word	1073759138
 505 00cc 84400040 		.word	1073758340
 506 00d0 86400040 		.word	1073758342
 507 00d4 01400040 		.word	1073758209
 508 00d8 02400040 		.word	1073758210
 509              		.cfi_endproc
 510              	.LFE4:
 511              		.size	timer_clock_SetDividerRegister, .-timer_clock_SetDividerRegister
 512              		.section	.text.timer_clock_SetSourceRegister,"ax",%progbits
 513              		.align	2
 514              		.global	timer_clock_SetSourceRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	timer_clock_SetSourceRegister, %function
 518              	timer_clock_SetSourceRegister:
 519              	.LFB9:
 420:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 currDiv = timer_clock_GetDividerRegister();
 520              		.loc 1 420 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL23:
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 19


 527              		.cfi_offset 3, -16
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 oldSrc = timer_clock_GetSourceRegister();
 532              		.loc 1 421 0
 533 0004 FFF7FEFF 		bl	timer_clock_GetDividerRegister
 534              	.LVL24:
 535 0008 0546     		mov	r5, r0
 536              	.LVL25:
 422:.\Generated_Source\PSoC5/timer_clock.c **** 
 537              		.loc 1 422 0
 538 000a FFF7FEFF 		bl	timer_clock_GetSourceRegister
 539              	.LVL26:
 424:.\Generated_Source\PSoC5/timer_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 540              		.loc 1 424 0
 541 000e 0346     		mov	r3, r0
 542 0010 60B1     		cbz	r0, .L48
 424:.\Generated_Source\PSoC5/timer_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 543              		.loc 1 424 0 is_stmt 0 discriminator 1
 544 0012 5CB9     		cbnz	r4, .L48
 425:.\Generated_Source\PSoC5/timer_clock.c ****     {
 545              		.loc 1 425 0 is_stmt 1
 546 0014 55B9     		cbnz	r5, .L48
 429:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 547              		.loc 1 429 0
 548 0016 104A     		ldr	r2, .L52
 549 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 550 001a 43F04003 		orr	r3, r3, #64
 551 001e 1370     		strb	r3, [r2]
 431:.\Generated_Source\PSoC5/timer_clock.c ****     }
 552              		.loc 1 431 0
 553 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 554              		.loc 1 430 0
 555 0022 03F0F803 		and	r3, r3, #248
 556 0026 1C43     		orrs	r4, r4, r3
 557 0028 1470     		strb	r4, [r2]
 558 002a 38BD     		pop	{r3, r4, r5, pc}
 559              	.LVL27:
 560              	.L48:
 433:.\Generated_Source\PSoC5/timer_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 561              		.loc 1 433 0
 562 002c 63B9     		cbnz	r3, .L50
 433:.\Generated_Source\PSoC5/timer_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 563              		.loc 1 433 0 is_stmt 0 discriminator 1
 564 002e 5CB1     		cbz	r4, .L50
 434:.\Generated_Source\PSoC5/timer_clock.c ****     {
 565              		.loc 1 434 0 is_stmt 1
 566 0030 55B9     		cbnz	r5, .L50
 439:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 567              		.loc 1 439 0
 568 0032 094A     		ldr	r2, .L52
 569 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 570              		.loc 1 438 0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 20


 571 0036 03F0F803 		and	r3, r3, #248
 572 003a 1C43     		orrs	r4, r4, r3
 573 003c 1470     		strb	r4, [r2]
 440:.\Generated_Source\PSoC5/timer_clock.c ****     }
 574              		.loc 1 440 0
 575 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 576 0040 03F0BF03 		and	r3, r3, #191
 577 0044 1370     		strb	r3, [r2]
 578 0046 38BD     		pop	{r3, r4, r5, pc}
 579              	.LVL28:
 580              	.L50:
 445:.\Generated_Source\PSoC5/timer_clock.c ****     }
 581              		.loc 1 445 0
 582 0048 034A     		ldr	r2, .L52
 583 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 584              		.loc 1 444 0
 585 004c 03F0F803 		and	r3, r3, #248
 586 0050 1C43     		orrs	r4, r4, r3
 587 0052 1470     		strb	r4, [r2]
 588 0054 38BD     		pop	{r3, r4, r5, pc}
 589              	.LVL29:
 590              	.L53:
 591 0056 00BF     		.align	2
 592              	.L52:
 593 0058 86400040 		.word	1073758342
 594              		.cfi_endproc
 595              	.LFE9:
 596              		.size	timer_clock_SetSourceRegister, .-timer_clock_SetSourceRegister
 597              		.text
 598              	.Letext0:
 599              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 600              		.section	.debug_info,"",%progbits
 601              	.Ldebug_info0:
 602 0000 7F020000 		.4byte	0x27f
 603 0004 0400     		.2byte	0x4
 604 0006 00000000 		.4byte	.Ldebug_abbrev0
 605 000a 04       		.byte	0x4
 606 000b 01       		.uleb128 0x1
 607 000c C8010000 		.4byte	.LASF36
 608 0010 01       		.byte	0x1
 609 0011 AF020000 		.4byte	.LASF37
 610 0015 00000000 		.4byte	.LASF38
 611 0019 00000000 		.4byte	.Ldebug_ranges0+0
 612 001d 00000000 		.4byte	0
 613 0021 00000000 		.4byte	.Ldebug_line0
 614 0025 02       		.uleb128 0x2
 615 0026 01       		.byte	0x1
 616 0027 06       		.byte	0x6
 617 0028 2B010000 		.4byte	.LASF0
 618 002c 02       		.uleb128 0x2
 619 002d 01       		.byte	0x1
 620 002e 08       		.byte	0x8
 621 002f FF000000 		.4byte	.LASF1
 622 0033 02       		.uleb128 0x2
 623 0034 02       		.byte	0x2
 624 0035 05       		.byte	0x5
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 21


 625 0036 51000000 		.4byte	.LASF2
 626 003a 02       		.uleb128 0x2
 627 003b 02       		.byte	0x2
 628 003c 07       		.byte	0x7
 629 003d B0010000 		.4byte	.LASF3
 630 0041 02       		.uleb128 0x2
 631 0042 04       		.byte	0x4
 632 0043 05       		.byte	0x5
 633 0044 B5000000 		.4byte	.LASF4
 634 0048 02       		.uleb128 0x2
 635 0049 04       		.byte	0x4
 636 004a 07       		.byte	0x7
 637 004b 78020000 		.4byte	.LASF5
 638 004f 02       		.uleb128 0x2
 639 0050 08       		.byte	0x8
 640 0051 05       		.byte	0x5
 641 0052 A7000000 		.4byte	.LASF6
 642 0056 02       		.uleb128 0x2
 643 0057 08       		.byte	0x8
 644 0058 07       		.byte	0x7
 645 0059 37010000 		.4byte	.LASF7
 646 005d 03       		.uleb128 0x3
 647 005e 04       		.byte	0x4
 648 005f 05       		.byte	0x5
 649 0060 696E7400 		.ascii	"int\000"
 650 0064 02       		.uleb128 0x2
 651 0065 04       		.byte	0x4
 652 0066 07       		.byte	0x7
 653 0067 4E010000 		.4byte	.LASF8
 654 006b 04       		.uleb128 0x4
 655 006c 71000000 		.4byte	.LASF9
 656 0070 02       		.byte	0x2
 657 0071 9201     		.2byte	0x192
 658 0073 2C000000 		.4byte	0x2c
 659 0077 04       		.uleb128 0x4
 660 0078 5B000000 		.4byte	.LASF10
 661 007c 02       		.byte	0x2
 662 007d 9301     		.2byte	0x193
 663 007f 3A000000 		.4byte	0x3a
 664 0083 02       		.uleb128 0x2
 665 0084 04       		.byte	0x4
 666 0085 04       		.byte	0x4
 667 0086 82000000 		.4byte	.LASF11
 668 008a 02       		.uleb128 0x2
 669 008b 08       		.byte	0x8
 670 008c 04       		.byte	0x4
 671 008d 8A020000 		.4byte	.LASF12
 672 0091 02       		.uleb128 0x2
 673 0092 01       		.byte	0x1
 674 0093 08       		.byte	0x8
 675 0094 C3010000 		.4byte	.LASF13
 676 0098 04       		.uleb128 0x4
 677 0099 73020000 		.4byte	.LASF14
 678 009d 02       		.byte	0x2
 679 009e 3C02     		.2byte	0x23c
 680 00a0 A4000000 		.4byte	0xa4
 681 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 22


 682 00a5 6B000000 		.4byte	0x6b
 683 00a9 04       		.uleb128 0x4
 684 00aa 4B000000 		.4byte	.LASF15
 685 00ae 02       		.byte	0x2
 686 00af 3D02     		.2byte	0x23d
 687 00b1 B5000000 		.4byte	0xb5
 688 00b5 05       		.uleb128 0x5
 689 00b6 77000000 		.4byte	0x77
 690 00ba 06       		.uleb128 0x6
 691 00bb 19010000 		.4byte	.LASF16
 692 00bf 01       		.byte	0x1
 693 00c0 2D       		.byte	0x2d
 694 00c1 00000000 		.4byte	.LFB0
 695 00c5 1C000000 		.4byte	.LFE0-.LFB0
 696 00c9 01       		.uleb128 0x1
 697 00ca 9C       		.byte	0x9c
 698 00cb 06       		.uleb128 0x6
 699 00cc F4020000 		.4byte	.LASF17
 700 00d0 01       		.byte	0x1
 701 00d1 47       		.byte	0x47
 702 00d2 00000000 		.4byte	.LFB1
 703 00d6 1C000000 		.4byte	.LFE1-.LFB1
 704 00da 01       		.uleb128 0x1
 705 00db 9C       		.byte	0x9c
 706 00dc 07       		.uleb128 0x7
 707 00dd D6020000 		.4byte	.LASF18
 708 00e1 01       		.byte	0x1
 709 00e2 64       		.byte	0x64
 710 00e3 00000000 		.4byte	.LFB2
 711 00e7 6C000000 		.4byte	.LFE2-.LFB2
 712 00eb 01       		.uleb128 0x1
 713 00ec 9C       		.byte	0x9c
 714 00ed 0B010000 		.4byte	0x10b
 715 00f1 08       		.uleb128 0x8
 716 00f2 0A000000 		.4byte	.LBB2
 717 00f6 62000000 		.4byte	.LBE2-.LBB2
 718 00fa 09       		.uleb128 0x9
 719 00fb 68020000 		.4byte	.LASF30
 720 00ff 01       		.byte	0x1
 721 0100 69       		.byte	0x69
 722 0101 77000000 		.4byte	0x77
 723 0105 00000000 		.4byte	.LLST0
 724 0109 00       		.byte	0
 725 010a 00       		.byte	0
 726 010b 07       		.uleb128 0x7
 727 010c 79010000 		.4byte	.LASF19
 728 0110 01       		.byte	0x1
 729 0111 9D       		.byte	0x9d
 730 0112 00000000 		.4byte	.LFB3
 731 0116 20000000 		.4byte	.LFE3-.LFB3
 732 011a 01       		.uleb128 0x1
 733 011b 9C       		.byte	0x9c
 734 011c 2E010000 		.4byte	0x12e
 735 0120 0A       		.uleb128 0xa
 736 0121 F9000000 		.4byte	.LASF21
 737 0125 01       		.byte	0x1
 738 0126 9D       		.byte	0x9d
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 23


 739 0127 6B000000 		.4byte	0x6b
 740 012b 01       		.uleb128 0x1
 741 012c 50       		.byte	0x50
 742 012d 00       		.byte	0
 743 012e 0B       		.uleb128 0xb
 744 012f DA000000 		.4byte	.LASF24
 745 0133 01       		.byte	0x1
 746 0134 2901     		.2byte	0x129
 747 0136 77000000 		.4byte	0x77
 748 013a 00000000 		.4byte	.LFB5
 749 013e 0C000000 		.4byte	.LFE5-.LFB5
 750 0142 01       		.uleb128 0x1
 751 0143 9C       		.byte	0x9c
 752 0144 0C       		.uleb128 0xc
 753 0145 05030000 		.4byte	.LASF20
 754 0149 01       		.byte	0x1
 755 014a 4C01     		.2byte	0x14c
 756 014c 00000000 		.4byte	.LFB6
 757 0150 14000000 		.4byte	.LFE6-.LFB6
 758 0154 01       		.uleb128 0x1
 759 0155 9C       		.byte	0x9c
 760 0156 6B010000 		.4byte	0x16b
 761 015a 0D       		.uleb128 0xd
 762 015b 0D010000 		.4byte	.LASF22
 763 015f 01       		.byte	0x1
 764 0160 4C01     		.2byte	0x14c
 765 0162 6B000000 		.4byte	0x6b
 766 0166 13000000 		.4byte	.LLST1
 767 016a 00       		.byte	0
 768 016b 0C       		.uleb128 0xc
 769 016c 91020000 		.4byte	.LASF23
 770 0170 01       		.byte	0x1
 771 0171 6F01     		.2byte	0x16f
 772 0173 00000000 		.4byte	.LFB7
 773 0177 18000000 		.4byte	.LFE7-.LFB7
 774 017b 01       		.uleb128 0x1
 775 017c 9C       		.byte	0x9c
 776 017d 92010000 		.4byte	0x192
 777 0181 0D       		.uleb128 0xd
 778 0182 0D010000 		.4byte	.LASF22
 779 0186 01       		.byte	0x1
 780 0187 6F01     		.2byte	0x16f
 781 0189 6B000000 		.4byte	0x6b
 782 018d 34000000 		.4byte	.LLST2
 783 0191 00       		.byte	0
 784 0192 0B       		.uleb128 0xb
 785 0193 BE000000 		.4byte	.LASF25
 786 0197 01       		.byte	0x1
 787 0198 8401     		.2byte	0x184
 788 019a 6B000000 		.4byte	0x6b
 789 019e 00000000 		.4byte	.LFB8
 790 01a2 10000000 		.4byte	.LFE8-.LFB8
 791 01a6 01       		.uleb128 0x1
 792 01a7 9C       		.byte	0x9c
 793 01a8 0B       		.uleb128 0xb
 794 01a9 5B010000 		.4byte	.LASF26
 795 01ad 01       		.byte	0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 24


 796 01ae D001     		.2byte	0x1d0
 797 01b0 6B000000 		.4byte	0x6b
 798 01b4 00000000 		.4byte	.LFB10
 799 01b8 10000000 		.4byte	.LFE10-.LFB10
 800 01bc 01       		.uleb128 0x1
 801 01bd 9C       		.byte	0x9c
 802 01be 07       		.uleb128 0x7
 803 01bf 88000000 		.4byte	.LASF27
 804 01c3 01       		.byte	0x1
 805 01c4 C1       		.byte	0xc1
 806 01c5 00000000 		.4byte	.LFB4
 807 01c9 DC000000 		.4byte	.LFE4-.LFB4
 808 01cd 01       		.uleb128 0x1
 809 01ce 9C       		.byte	0x9c
 810 01cf 2F020000 		.4byte	0x22f
 811 01d3 0E       		.uleb128 0xe
 812 01d4 77000000 		.4byte	.LASF28
 813 01d8 01       		.byte	0x1
 814 01d9 C1       		.byte	0xc1
 815 01da 77000000 		.4byte	0x77
 816 01de 55000000 		.4byte	.LLST3
 817 01e2 0E       		.uleb128 0xe
 818 01e3 62000000 		.4byte	.LASF29
 819 01e7 01       		.byte	0x1
 820 01e8 C1       		.byte	0xc1
 821 01e9 6B000000 		.4byte	0x6b
 822 01ed 76000000 		.4byte	.LLST4
 823 01f1 09       		.uleb128 0x9
 824 01f2 EC020000 		.4byte	.LASF31
 825 01f6 01       		.byte	0x1
 826 01f7 C4       		.byte	0xc4
 827 01f8 6B000000 		.4byte	0x6b
 828 01fc 97000000 		.4byte	.LLST5
 829 0200 09       		.uleb128 0x9
 830 0201 60020000 		.4byte	.LASF32
 831 0205 01       		.byte	0x1
 832 0206 C6       		.byte	0xc6
 833 0207 6B000000 		.4byte	0x6b
 834 020b E1000000 		.4byte	.LLST6
 835 020f 0F       		.uleb128 0xf
 836 0210 68020000 		.4byte	.LASF30
 837 0214 01       		.byte	0x1
 838 0215 C7       		.byte	0xc7
 839 0216 77000000 		.4byte	0x77
 840 021a 01       		.uleb128 0x1
 841 021b 50       		.byte	0x50
 842 021c 10       		.uleb128 0x10
 843 021d 0A000000 		.4byte	.LVL8
 844 0221 A8010000 		.4byte	0x1a8
 845 0225 10       		.uleb128 0x10
 846 0226 10000000 		.4byte	.LVL10
 847 022a 2E010000 		.4byte	0x12e
 848 022e 00       		.byte	0
 849 022f 11       		.uleb128 0x11
 850 0230 92010000 		.4byte	.LASF39
 851 0234 01       		.byte	0x1
 852 0235 A301     		.2byte	0x1a3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 25


 853 0237 00000000 		.4byte	.LFB9
 854 023b 5C000000 		.4byte	.LFE9-.LFB9
 855 023f 01       		.uleb128 0x1
 856 0240 9C       		.byte	0x9c
 857 0241 0D       		.uleb128 0xd
 858 0242 56020000 		.4byte	.LASF33
 859 0246 01       		.byte	0x1
 860 0247 A301     		.2byte	0x1a3
 861 0249 6B000000 		.4byte	0x6b
 862 024d F4000000 		.4byte	.LLST7
 863 0251 12       		.uleb128 0x12
 864 0252 43000000 		.4byte	.LASF34
 865 0256 01       		.byte	0x1
 866 0257 A501     		.2byte	0x1a5
 867 0259 77000000 		.4byte	0x77
 868 025d 15010000 		.4byte	.LLST8
 869 0261 13       		.uleb128 0x13
 870 0262 6A000000 		.4byte	.LASF35
 871 0266 01       		.byte	0x1
 872 0267 A601     		.2byte	0x1a6
 873 0269 6B000000 		.4byte	0x6b
 874 026d 01       		.uleb128 0x1
 875 026e 50       		.byte	0x50
 876 026f 10       		.uleb128 0x10
 877 0270 08000000 		.4byte	.LVL24
 878 0274 2E010000 		.4byte	0x12e
 879 0278 10       		.uleb128 0x10
 880 0279 0E000000 		.4byte	.LVL26
 881 027d A8010000 		.4byte	0x1a8
 882 0281 00       		.byte	0
 883 0282 00       		.byte	0
 884              		.section	.debug_abbrev,"",%progbits
 885              	.Ldebug_abbrev0:
 886 0000 01       		.uleb128 0x1
 887 0001 11       		.uleb128 0x11
 888 0002 01       		.byte	0x1
 889 0003 25       		.uleb128 0x25
 890 0004 0E       		.uleb128 0xe
 891 0005 13       		.uleb128 0x13
 892 0006 0B       		.uleb128 0xb
 893 0007 03       		.uleb128 0x3
 894 0008 0E       		.uleb128 0xe
 895 0009 1B       		.uleb128 0x1b
 896 000a 0E       		.uleb128 0xe
 897 000b 55       		.uleb128 0x55
 898 000c 17       		.uleb128 0x17
 899 000d 11       		.uleb128 0x11
 900 000e 01       		.uleb128 0x1
 901 000f 10       		.uleb128 0x10
 902 0010 17       		.uleb128 0x17
 903 0011 00       		.byte	0
 904 0012 00       		.byte	0
 905 0013 02       		.uleb128 0x2
 906 0014 24       		.uleb128 0x24
 907 0015 00       		.byte	0
 908 0016 0B       		.uleb128 0xb
 909 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 26


 910 0018 3E       		.uleb128 0x3e
 911 0019 0B       		.uleb128 0xb
 912 001a 03       		.uleb128 0x3
 913 001b 0E       		.uleb128 0xe
 914 001c 00       		.byte	0
 915 001d 00       		.byte	0
 916 001e 03       		.uleb128 0x3
 917 001f 24       		.uleb128 0x24
 918 0020 00       		.byte	0
 919 0021 0B       		.uleb128 0xb
 920 0022 0B       		.uleb128 0xb
 921 0023 3E       		.uleb128 0x3e
 922 0024 0B       		.uleb128 0xb
 923 0025 03       		.uleb128 0x3
 924 0026 08       		.uleb128 0x8
 925 0027 00       		.byte	0
 926 0028 00       		.byte	0
 927 0029 04       		.uleb128 0x4
 928 002a 16       		.uleb128 0x16
 929 002b 00       		.byte	0
 930 002c 03       		.uleb128 0x3
 931 002d 0E       		.uleb128 0xe
 932 002e 3A       		.uleb128 0x3a
 933 002f 0B       		.uleb128 0xb
 934 0030 3B       		.uleb128 0x3b
 935 0031 05       		.uleb128 0x5
 936 0032 49       		.uleb128 0x49
 937 0033 13       		.uleb128 0x13
 938 0034 00       		.byte	0
 939 0035 00       		.byte	0
 940 0036 05       		.uleb128 0x5
 941 0037 35       		.uleb128 0x35
 942 0038 00       		.byte	0
 943 0039 49       		.uleb128 0x49
 944 003a 13       		.uleb128 0x13
 945 003b 00       		.byte	0
 946 003c 00       		.byte	0
 947 003d 06       		.uleb128 0x6
 948 003e 2E       		.uleb128 0x2e
 949 003f 00       		.byte	0
 950 0040 3F       		.uleb128 0x3f
 951 0041 19       		.uleb128 0x19
 952 0042 03       		.uleb128 0x3
 953 0043 0E       		.uleb128 0xe
 954 0044 3A       		.uleb128 0x3a
 955 0045 0B       		.uleb128 0xb
 956 0046 3B       		.uleb128 0x3b
 957 0047 0B       		.uleb128 0xb
 958 0048 27       		.uleb128 0x27
 959 0049 19       		.uleb128 0x19
 960 004a 11       		.uleb128 0x11
 961 004b 01       		.uleb128 0x1
 962 004c 12       		.uleb128 0x12
 963 004d 06       		.uleb128 0x6
 964 004e 40       		.uleb128 0x40
 965 004f 18       		.uleb128 0x18
 966 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 27


 967 0052 19       		.uleb128 0x19
 968 0053 00       		.byte	0
 969 0054 00       		.byte	0
 970 0055 07       		.uleb128 0x7
 971 0056 2E       		.uleb128 0x2e
 972 0057 01       		.byte	0x1
 973 0058 3F       		.uleb128 0x3f
 974 0059 19       		.uleb128 0x19
 975 005a 03       		.uleb128 0x3
 976 005b 0E       		.uleb128 0xe
 977 005c 3A       		.uleb128 0x3a
 978 005d 0B       		.uleb128 0xb
 979 005e 3B       		.uleb128 0x3b
 980 005f 0B       		.uleb128 0xb
 981 0060 27       		.uleb128 0x27
 982 0061 19       		.uleb128 0x19
 983 0062 11       		.uleb128 0x11
 984 0063 01       		.uleb128 0x1
 985 0064 12       		.uleb128 0x12
 986 0065 06       		.uleb128 0x6
 987 0066 40       		.uleb128 0x40
 988 0067 18       		.uleb128 0x18
 989 0068 9742     		.uleb128 0x2117
 990 006a 19       		.uleb128 0x19
 991 006b 01       		.uleb128 0x1
 992 006c 13       		.uleb128 0x13
 993 006d 00       		.byte	0
 994 006e 00       		.byte	0
 995 006f 08       		.uleb128 0x8
 996 0070 0B       		.uleb128 0xb
 997 0071 01       		.byte	0x1
 998 0072 11       		.uleb128 0x11
 999 0073 01       		.uleb128 0x1
 1000 0074 12       		.uleb128 0x12
 1001 0075 06       		.uleb128 0x6
 1002 0076 00       		.byte	0
 1003 0077 00       		.byte	0
 1004 0078 09       		.uleb128 0x9
 1005 0079 34       		.uleb128 0x34
 1006 007a 00       		.byte	0
 1007 007b 03       		.uleb128 0x3
 1008 007c 0E       		.uleb128 0xe
 1009 007d 3A       		.uleb128 0x3a
 1010 007e 0B       		.uleb128 0xb
 1011 007f 3B       		.uleb128 0x3b
 1012 0080 0B       		.uleb128 0xb
 1013 0081 49       		.uleb128 0x49
 1014 0082 13       		.uleb128 0x13
 1015 0083 02       		.uleb128 0x2
 1016 0084 17       		.uleb128 0x17
 1017 0085 00       		.byte	0
 1018 0086 00       		.byte	0
 1019 0087 0A       		.uleb128 0xa
 1020 0088 05       		.uleb128 0x5
 1021 0089 00       		.byte	0
 1022 008a 03       		.uleb128 0x3
 1023 008b 0E       		.uleb128 0xe
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 28


 1024 008c 3A       		.uleb128 0x3a
 1025 008d 0B       		.uleb128 0xb
 1026 008e 3B       		.uleb128 0x3b
 1027 008f 0B       		.uleb128 0xb
 1028 0090 49       		.uleb128 0x49
 1029 0091 13       		.uleb128 0x13
 1030 0092 02       		.uleb128 0x2
 1031 0093 18       		.uleb128 0x18
 1032 0094 00       		.byte	0
 1033 0095 00       		.byte	0
 1034 0096 0B       		.uleb128 0xb
 1035 0097 2E       		.uleb128 0x2e
 1036 0098 00       		.byte	0
 1037 0099 3F       		.uleb128 0x3f
 1038 009a 19       		.uleb128 0x19
 1039 009b 03       		.uleb128 0x3
 1040 009c 0E       		.uleb128 0xe
 1041 009d 3A       		.uleb128 0x3a
 1042 009e 0B       		.uleb128 0xb
 1043 009f 3B       		.uleb128 0x3b
 1044 00a0 05       		.uleb128 0x5
 1045 00a1 27       		.uleb128 0x27
 1046 00a2 19       		.uleb128 0x19
 1047 00a3 49       		.uleb128 0x49
 1048 00a4 13       		.uleb128 0x13
 1049 00a5 11       		.uleb128 0x11
 1050 00a6 01       		.uleb128 0x1
 1051 00a7 12       		.uleb128 0x12
 1052 00a8 06       		.uleb128 0x6
 1053 00a9 40       		.uleb128 0x40
 1054 00aa 18       		.uleb128 0x18
 1055 00ab 9742     		.uleb128 0x2117
 1056 00ad 19       		.uleb128 0x19
 1057 00ae 00       		.byte	0
 1058 00af 00       		.byte	0
 1059 00b0 0C       		.uleb128 0xc
 1060 00b1 2E       		.uleb128 0x2e
 1061 00b2 01       		.byte	0x1
 1062 00b3 3F       		.uleb128 0x3f
 1063 00b4 19       		.uleb128 0x19
 1064 00b5 03       		.uleb128 0x3
 1065 00b6 0E       		.uleb128 0xe
 1066 00b7 3A       		.uleb128 0x3a
 1067 00b8 0B       		.uleb128 0xb
 1068 00b9 3B       		.uleb128 0x3b
 1069 00ba 05       		.uleb128 0x5
 1070 00bb 27       		.uleb128 0x27
 1071 00bc 19       		.uleb128 0x19
 1072 00bd 11       		.uleb128 0x11
 1073 00be 01       		.uleb128 0x1
 1074 00bf 12       		.uleb128 0x12
 1075 00c0 06       		.uleb128 0x6
 1076 00c1 40       		.uleb128 0x40
 1077 00c2 18       		.uleb128 0x18
 1078 00c3 9742     		.uleb128 0x2117
 1079 00c5 19       		.uleb128 0x19
 1080 00c6 01       		.uleb128 0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 29


 1081 00c7 13       		.uleb128 0x13
 1082 00c8 00       		.byte	0
 1083 00c9 00       		.byte	0
 1084 00ca 0D       		.uleb128 0xd
 1085 00cb 05       		.uleb128 0x5
 1086 00cc 00       		.byte	0
 1087 00cd 03       		.uleb128 0x3
 1088 00ce 0E       		.uleb128 0xe
 1089 00cf 3A       		.uleb128 0x3a
 1090 00d0 0B       		.uleb128 0xb
 1091 00d1 3B       		.uleb128 0x3b
 1092 00d2 05       		.uleb128 0x5
 1093 00d3 49       		.uleb128 0x49
 1094 00d4 13       		.uleb128 0x13
 1095 00d5 02       		.uleb128 0x2
 1096 00d6 17       		.uleb128 0x17
 1097 00d7 00       		.byte	0
 1098 00d8 00       		.byte	0
 1099 00d9 0E       		.uleb128 0xe
 1100 00da 05       		.uleb128 0x5
 1101 00db 00       		.byte	0
 1102 00dc 03       		.uleb128 0x3
 1103 00dd 0E       		.uleb128 0xe
 1104 00de 3A       		.uleb128 0x3a
 1105 00df 0B       		.uleb128 0xb
 1106 00e0 3B       		.uleb128 0x3b
 1107 00e1 0B       		.uleb128 0xb
 1108 00e2 49       		.uleb128 0x49
 1109 00e3 13       		.uleb128 0x13
 1110 00e4 02       		.uleb128 0x2
 1111 00e5 17       		.uleb128 0x17
 1112 00e6 00       		.byte	0
 1113 00e7 00       		.byte	0
 1114 00e8 0F       		.uleb128 0xf
 1115 00e9 34       		.uleb128 0x34
 1116 00ea 00       		.byte	0
 1117 00eb 03       		.uleb128 0x3
 1118 00ec 0E       		.uleb128 0xe
 1119 00ed 3A       		.uleb128 0x3a
 1120 00ee 0B       		.uleb128 0xb
 1121 00ef 3B       		.uleb128 0x3b
 1122 00f0 0B       		.uleb128 0xb
 1123 00f1 49       		.uleb128 0x49
 1124 00f2 13       		.uleb128 0x13
 1125 00f3 02       		.uleb128 0x2
 1126 00f4 18       		.uleb128 0x18
 1127 00f5 00       		.byte	0
 1128 00f6 00       		.byte	0
 1129 00f7 10       		.uleb128 0x10
 1130 00f8 898201   		.uleb128 0x4109
 1131 00fb 00       		.byte	0
 1132 00fc 11       		.uleb128 0x11
 1133 00fd 01       		.uleb128 0x1
 1134 00fe 31       		.uleb128 0x31
 1135 00ff 13       		.uleb128 0x13
 1136 0100 00       		.byte	0
 1137 0101 00       		.byte	0
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 30


 1138 0102 11       		.uleb128 0x11
 1139 0103 2E       		.uleb128 0x2e
 1140 0104 01       		.byte	0x1
 1141 0105 3F       		.uleb128 0x3f
 1142 0106 19       		.uleb128 0x19
 1143 0107 03       		.uleb128 0x3
 1144 0108 0E       		.uleb128 0xe
 1145 0109 3A       		.uleb128 0x3a
 1146 010a 0B       		.uleb128 0xb
 1147 010b 3B       		.uleb128 0x3b
 1148 010c 05       		.uleb128 0x5
 1149 010d 27       		.uleb128 0x27
 1150 010e 19       		.uleb128 0x19
 1151 010f 11       		.uleb128 0x11
 1152 0110 01       		.uleb128 0x1
 1153 0111 12       		.uleb128 0x12
 1154 0112 06       		.uleb128 0x6
 1155 0113 40       		.uleb128 0x40
 1156 0114 18       		.uleb128 0x18
 1157 0115 9742     		.uleb128 0x2117
 1158 0117 19       		.uleb128 0x19
 1159 0118 00       		.byte	0
 1160 0119 00       		.byte	0
 1161 011a 12       		.uleb128 0x12
 1162 011b 34       		.uleb128 0x34
 1163 011c 00       		.byte	0
 1164 011d 03       		.uleb128 0x3
 1165 011e 0E       		.uleb128 0xe
 1166 011f 3A       		.uleb128 0x3a
 1167 0120 0B       		.uleb128 0xb
 1168 0121 3B       		.uleb128 0x3b
 1169 0122 05       		.uleb128 0x5
 1170 0123 49       		.uleb128 0x49
 1171 0124 13       		.uleb128 0x13
 1172 0125 02       		.uleb128 0x2
 1173 0126 17       		.uleb128 0x17
 1174 0127 00       		.byte	0
 1175 0128 00       		.byte	0
 1176 0129 13       		.uleb128 0x13
 1177 012a 34       		.uleb128 0x34
 1178 012b 00       		.byte	0
 1179 012c 03       		.uleb128 0x3
 1180 012d 0E       		.uleb128 0xe
 1181 012e 3A       		.uleb128 0x3a
 1182 012f 0B       		.uleb128 0xb
 1183 0130 3B       		.uleb128 0x3b
 1184 0131 05       		.uleb128 0x5
 1185 0132 49       		.uleb128 0x49
 1186 0133 13       		.uleb128 0x13
 1187 0134 02       		.uleb128 0x2
 1188 0135 18       		.uleb128 0x18
 1189 0136 00       		.byte	0
 1190 0137 00       		.byte	0
 1191 0138 00       		.byte	0
 1192              		.section	.debug_loc,"",%progbits
 1193              	.Ldebug_loc0:
 1194              	.LLST0:
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 31


 1195 0000 2A000000 		.4byte	.LVL0
 1196 0004 5A000000 		.4byte	.LVL1
 1197 0008 0100     		.2byte	0x1
 1198 000a 52       		.byte	0x52
 1199 000b 00000000 		.4byte	0
 1200 000f 00000000 		.4byte	0
 1201              	.LLST1:
 1202 0013 00000000 		.4byte	.LVL3
 1203 0017 08000000 		.4byte	.LVL4
 1204 001b 0100     		.2byte	0x1
 1205 001d 50       		.byte	0x50
 1206 001e 08000000 		.4byte	.LVL4
 1207 0022 14000000 		.4byte	.LFE6
 1208 0026 0400     		.2byte	0x4
 1209 0028 F3       		.byte	0xf3
 1210 0029 01       		.uleb128 0x1
 1211 002a 50       		.byte	0x50
 1212 002b 9F       		.byte	0x9f
 1213 002c 00000000 		.4byte	0
 1214 0030 00000000 		.4byte	0
 1215              	.LLST2:
 1216 0034 00000000 		.4byte	.LVL5
 1217 0038 06000000 		.4byte	.LVL6
 1218 003c 0100     		.2byte	0x1
 1219 003e 50       		.byte	0x50
 1220 003f 06000000 		.4byte	.LVL6
 1221 0043 18000000 		.4byte	.LFE7
 1222 0047 0400     		.2byte	0x4
 1223 0049 F3       		.byte	0xf3
 1224 004a 01       		.uleb128 0x1
 1225 004b 50       		.byte	0x50
 1226 004c 9F       		.byte	0x9f
 1227 004d 00000000 		.4byte	0
 1228 0051 00000000 		.4byte	0
 1229              	.LLST3:
 1230 0055 00000000 		.4byte	.LVL7
 1231 0059 09000000 		.4byte	.LVL8-1
 1232 005d 0100     		.2byte	0x1
 1233 005f 50       		.byte	0x50
 1234 0060 09000000 		.4byte	.LVL8-1
 1235 0064 DC000000 		.4byte	.LFE4
 1236 0068 0400     		.2byte	0x4
 1237 006a F3       		.byte	0xf3
 1238 006b 01       		.uleb128 0x1
 1239 006c 50       		.byte	0x50
 1240 006d 9F       		.byte	0x9f
 1241 006e 00000000 		.4byte	0
 1242 0072 00000000 		.4byte	0
 1243              	.LLST4:
 1244 0076 00000000 		.4byte	.LVL7
 1245 007a 09000000 		.4byte	.LVL8-1
 1246 007e 0100     		.2byte	0x1
 1247 0080 51       		.byte	0x51
 1248 0081 09000000 		.4byte	.LVL8-1
 1249 0085 DC000000 		.4byte	.LFE4
 1250 0089 0400     		.2byte	0x4
 1251 008b F3       		.byte	0xf3
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 32


 1252 008c 01       		.uleb128 0x1
 1253 008d 51       		.byte	0x51
 1254 008e 9F       		.byte	0x9f
 1255 008f 00000000 		.4byte	0
 1256 0093 00000000 		.4byte	0
 1257              	.LLST5:
 1258 0097 1E000000 		.4byte	.LVL11
 1259 009b 2C000000 		.4byte	.LVL12
 1260 009f 0100     		.2byte	0x1
 1261 00a1 52       		.byte	0x52
 1262 00a2 36000000 		.4byte	.LVL13
 1263 00a6 38000000 		.4byte	.LVL14
 1264 00aa 0100     		.2byte	0x1
 1265 00ac 52       		.byte	0x52
 1266 00ad 38000000 		.4byte	.LVL14
 1267 00b1 3A000000 		.4byte	.LVL15
 1268 00b5 0100     		.2byte	0x1
 1269 00b7 53       		.byte	0x53
 1270 00b8 46000000 		.4byte	.LVL16
 1271 00bc A4000000 		.4byte	.LVL18
 1272 00c0 0100     		.2byte	0x1
 1273 00c2 52       		.byte	0x52
 1274 00c3 A6000000 		.4byte	.LVL19
 1275 00c7 A8000000 		.4byte	.LVL20
 1276 00cb 0100     		.2byte	0x1
 1277 00cd 52       		.byte	0x52
 1278 00ce B8000000 		.4byte	.LVL21
 1279 00d2 C4000000 		.4byte	.LVL22
 1280 00d6 0100     		.2byte	0x1
 1281 00d8 52       		.byte	0x52
 1282 00d9 00000000 		.4byte	0
 1283 00dd 00000000 		.4byte	0
 1284              	.LLST6:
 1285 00e1 0C000000 		.4byte	.LVL9
 1286 00e5 50000000 		.4byte	.LVL17
 1287 00e9 0100     		.2byte	0x1
 1288 00eb 56       		.byte	0x56
 1289 00ec 00000000 		.4byte	0
 1290 00f0 00000000 		.4byte	0
 1291              	.LLST7:
 1292 00f4 00000000 		.4byte	.LVL23
 1293 00f8 07000000 		.4byte	.LVL24-1
 1294 00fc 0100     		.2byte	0x1
 1295 00fe 50       		.byte	0x50
 1296 00ff 07000000 		.4byte	.LVL24-1
 1297 0103 5C000000 		.4byte	.LFE9
 1298 0107 0400     		.2byte	0x4
 1299 0109 F3       		.byte	0xf3
 1300 010a 01       		.uleb128 0x1
 1301 010b 50       		.byte	0x50
 1302 010c 9F       		.byte	0x9f
 1303 010d 00000000 		.4byte	0
 1304 0111 00000000 		.4byte	0
 1305              	.LLST8:
 1306 0115 0A000000 		.4byte	.LVL25
 1307 0119 56000000 		.4byte	.LVL29
 1308 011d 0100     		.2byte	0x1
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 33


 1309 011f 55       		.byte	0x55
 1310 0120 00000000 		.4byte	0
 1311 0124 00000000 		.4byte	0
 1312              		.section	.debug_aranges,"",%progbits
 1313 0000 6C000000 		.4byte	0x6c
 1314 0004 0200     		.2byte	0x2
 1315 0006 00000000 		.4byte	.Ldebug_info0
 1316 000a 04       		.byte	0x4
 1317 000b 00       		.byte	0
 1318 000c 0000     		.2byte	0
 1319 000e 0000     		.2byte	0
 1320 0010 00000000 		.4byte	.LFB0
 1321 0014 1C000000 		.4byte	.LFE0-.LFB0
 1322 0018 00000000 		.4byte	.LFB1
 1323 001c 1C000000 		.4byte	.LFE1-.LFB1
 1324 0020 00000000 		.4byte	.LFB2
 1325 0024 6C000000 		.4byte	.LFE2-.LFB2
 1326 0028 00000000 		.4byte	.LFB3
 1327 002c 20000000 		.4byte	.LFE3-.LFB3
 1328 0030 00000000 		.4byte	.LFB5
 1329 0034 0C000000 		.4byte	.LFE5-.LFB5
 1330 0038 00000000 		.4byte	.LFB6
 1331 003c 14000000 		.4byte	.LFE6-.LFB6
 1332 0040 00000000 		.4byte	.LFB7
 1333 0044 18000000 		.4byte	.LFE7-.LFB7
 1334 0048 00000000 		.4byte	.LFB8
 1335 004c 10000000 		.4byte	.LFE8-.LFB8
 1336 0050 00000000 		.4byte	.LFB10
 1337 0054 10000000 		.4byte	.LFE10-.LFB10
 1338 0058 00000000 		.4byte	.LFB4
 1339 005c DC000000 		.4byte	.LFE4-.LFB4
 1340 0060 00000000 		.4byte	.LFB9
 1341 0064 5C000000 		.4byte	.LFE9-.LFB9
 1342 0068 00000000 		.4byte	0
 1343 006c 00000000 		.4byte	0
 1344              		.section	.debug_ranges,"",%progbits
 1345              	.Ldebug_ranges0:
 1346 0000 00000000 		.4byte	.LFB0
 1347 0004 1C000000 		.4byte	.LFE0
 1348 0008 00000000 		.4byte	.LFB1
 1349 000c 1C000000 		.4byte	.LFE1
 1350 0010 00000000 		.4byte	.LFB2
 1351 0014 6C000000 		.4byte	.LFE2
 1352 0018 00000000 		.4byte	.LFB3
 1353 001c 20000000 		.4byte	.LFE3
 1354 0020 00000000 		.4byte	.LFB5
 1355 0024 0C000000 		.4byte	.LFE5
 1356 0028 00000000 		.4byte	.LFB6
 1357 002c 14000000 		.4byte	.LFE6
 1358 0030 00000000 		.4byte	.LFB7
 1359 0034 18000000 		.4byte	.LFE7
 1360 0038 00000000 		.4byte	.LFB8
 1361 003c 10000000 		.4byte	.LFE8
 1362 0040 00000000 		.4byte	.LFB10
 1363 0044 10000000 		.4byte	.LFE10
 1364 0048 00000000 		.4byte	.LFB4
 1365 004c DC000000 		.4byte	.LFE4
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 34


 1366 0050 00000000 		.4byte	.LFB9
 1367 0054 5C000000 		.4byte	.LFE9
 1368 0058 00000000 		.4byte	0
 1369 005c 00000000 		.4byte	0
 1370              		.section	.debug_line,"",%progbits
 1371              	.Ldebug_line0:
 1372 0000 8F010000 		.section	.debug_str,"MS",%progbits,1
 1372      02006100 
 1372      00000201 
 1372      FB0E0D00 
 1372      01010101 
 1373              	.LASF38:
 1374 0000 433A5C55 		.ascii	"C:\\Users\\mark6\\Google Drive\\Projects\\BarBot\\B"
 1374      73657273 
 1374      5C6D6172 
 1374      6B365C47 
 1374      6F6F676C 
 1375 002d 6172426F 		.ascii	"arBot\\Bartender.cydsn\000"
 1375      745C4261 
 1375      7274656E 
 1375      6465722E 
 1375      63796473 
 1376              	.LASF34:
 1377 0043 63757272 		.ascii	"currDiv\000"
 1377      44697600 
 1378              	.LASF15:
 1379 004b 72656731 		.ascii	"reg16\000"
 1379      3600
 1380              	.LASF2:
 1381 0051 73686F72 		.ascii	"short int\000"
 1381      7420696E 
 1381      7400
 1382              	.LASF10:
 1383 005b 75696E74 		.ascii	"uint16\000"
 1383      313600
 1384              	.LASF29:
 1385 0062 72657374 		.ascii	"restart\000"
 1385      61727400 
 1386              	.LASF35:
 1387 006a 6F6C6453 		.ascii	"oldSrc\000"
 1387      726300
 1388              	.LASF9:
 1389 0071 75696E74 		.ascii	"uint8\000"
 1389      3800
 1390              	.LASF28:
 1391 0077 636C6B44 		.ascii	"clkDivider\000"
 1391      69766964 
 1391      657200
 1392              	.LASF11:
 1393 0082 666C6F61 		.ascii	"float\000"
 1393      7400
 1394              	.LASF27:
 1395 0088 74696D65 		.ascii	"timer_clock_SetDividerRegister\000"
 1395      725F636C 
 1395      6F636B5F 
 1395      53657444 
 1395      69766964 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 35


 1396              	.LASF6:
 1397 00a7 6C6F6E67 		.ascii	"long long int\000"
 1397      206C6F6E 
 1397      6720696E 
 1397      7400
 1398              	.LASF4:
 1399 00b5 6C6F6E67 		.ascii	"long int\000"
 1399      20696E74 
 1399      00
 1400              	.LASF25:
 1401 00be 74696D65 		.ascii	"timer_clock_GetModeRegister\000"
 1401      725F636C 
 1401      6F636B5F 
 1401      4765744D 
 1401      6F646552 
 1402              	.LASF24:
 1403 00da 74696D65 		.ascii	"timer_clock_GetDividerRegister\000"
 1403      725F636C 
 1403      6F636B5F 
 1403      47657444 
 1403      69766964 
 1404              	.LASF21:
 1405 00f9 73746174 		.ascii	"state\000"
 1405      6500
 1406              	.LASF1:
 1407 00ff 756E7369 		.ascii	"unsigned char\000"
 1407      676E6564 
 1407      20636861 
 1407      7200
 1408              	.LASF22:
 1409 010d 6D6F6465 		.ascii	"modeBitMask\000"
 1409      4269744D 
 1409      61736B00 
 1410              	.LASF16:
 1411 0119 74696D65 		.ascii	"timer_clock_Start\000"
 1411      725F636C 
 1411      6F636B5F 
 1411      53746172 
 1411      7400
 1412              	.LASF0:
 1413 012b 7369676E 		.ascii	"signed char\000"
 1413      65642063 
 1413      68617200 
 1414              	.LASF7:
 1415 0137 6C6F6E67 		.ascii	"long long unsigned int\000"
 1415      206C6F6E 
 1415      6720756E 
 1415      7369676E 
 1415      65642069 
 1416              	.LASF8:
 1417 014e 756E7369 		.ascii	"unsigned int\000"
 1417      676E6564 
 1417      20696E74 
 1417      00
 1418              	.LASF26:
 1419 015b 74696D65 		.ascii	"timer_clock_GetSourceRegister\000"
 1419      725F636C 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 36


 1419      6F636B5F 
 1419      47657453 
 1419      6F757263 
 1420              	.LASF19:
 1421 0179 74696D65 		.ascii	"timer_clock_StandbyPower\000"
 1421      725F636C 
 1421      6F636B5F 
 1421      5374616E 
 1421      64627950 
 1422              	.LASF39:
 1423 0192 74696D65 		.ascii	"timer_clock_SetSourceRegister\000"
 1423      725F636C 
 1423      6F636B5F 
 1423      53657453 
 1423      6F757263 
 1424              	.LASF3:
 1425 01b0 73686F72 		.ascii	"short unsigned int\000"
 1425      7420756E 
 1425      7369676E 
 1425      65642069 
 1425      6E7400
 1426              	.LASF13:
 1427 01c3 63686172 		.ascii	"char\000"
 1427      00
 1428              	.LASF36:
 1429 01c8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1429      4320342E 
 1429      392E3320 
 1429      32303135 
 1429      30333033 
 1430 01fb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1430      20726576 
 1430      6973696F 
 1430      6E203232 
 1430      31323230 
 1431 022e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1431      66756E63 
 1431      74696F6E 
 1431      2D736563 
 1431      74696F6E 
 1432              	.LASF33:
 1433 0256 636C6B53 		.ascii	"clkSource\000"
 1433      6F757263 
 1433      6500
 1434              	.LASF32:
 1435 0260 63757272 		.ascii	"currSrc\000"
 1435      53726300 
 1436              	.LASF30:
 1437 0268 6F6C6444 		.ascii	"oldDivider\000"
 1437      69766964 
 1437      657200
 1438              	.LASF14:
 1439 0273 72656738 		.ascii	"reg8\000"
 1439      00
 1440              	.LASF5:
 1441 0278 6C6F6E67 		.ascii	"long unsigned int\000"
 1441      20756E73 
ARM GAS  C:\Users\mark6\AppData\Local\Temp\cc7NWLg1.s 			page 37


 1441      69676E65 
 1441      6420696E 
 1441      7400
 1442              	.LASF12:
 1443 028a 646F7562 		.ascii	"double\000"
 1443      6C6500
 1444              	.LASF23:
 1445 0291 74696D65 		.ascii	"timer_clock_ClearModeRegister\000"
 1445      725F636C 
 1445      6F636B5F 
 1445      436C6561 
 1445      724D6F64 
 1446              	.LASF37:
 1447 02af 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\timer_clock.c\000"
 1447      6E657261 
 1447      7465645F 
 1447      536F7572 
 1447      63655C50 
 1448              	.LASF18:
 1449 02d6 74696D65 		.ascii	"timer_clock_StopBlock\000"
 1449      725F636C 
 1449      6F636B5F 
 1449      53746F70 
 1449      426C6F63 
 1450              	.LASF31:
 1451 02ec 656E6162 		.ascii	"enabled\000"
 1451      6C656400 
 1452              	.LASF17:
 1453 02f4 74696D65 		.ascii	"timer_clock_Stop\000"
 1453      725F636C 
 1453      6F636B5F 
 1453      53746F70 
 1453      00
 1454              	.LASF20:
 1455 0305 74696D65 		.ascii	"timer_clock_SetModeRegister\000"
 1455      725F636C 
 1455      6F636B5F 
 1455      5365744D 
 1455      6F646552 
 1456              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
